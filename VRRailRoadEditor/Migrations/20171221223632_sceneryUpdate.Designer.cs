// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage;
using Microsoft.EntityFrameworkCore.Storage.Internal;
using Microsoft.EntityFrameworkCore.ValueGeneration;
using System;
using VRRailRoadEditor.Data;

namespace VRRailRoadEditor.Migrations
{
    [DbContext(typeof(VRRailRoadEditorContext))]
    [Migration("20171221223632_sceneryUpdate")]
    partial class sceneryUpdate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.0.1-rtm-125")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("VRRailRoadEditor.Models.Dependent", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd();

                    b.Property<decimal>("BaseAnnualCostOfBenefits");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(60);

                    b.HasKey("ID");

                    b.ToTable("Dependents");
                });

            modelBuilder.Entity("VRRailRoadEditor.Models.Discount", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd();

                    b.Property<bool>("Active");

                    b.Property<int>("Amount");

                    b.Property<string>("Name")
                        .IsRequired();

                    b.Property<string>("OptionalOperand");

                    b.HasKey("ID");

                    b.ToTable("Discounts");
                });

            modelBuilder.Entity("VRRailRoadEditor.Models.Employee", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd();

                    b.Property<decimal>("BaseAnnualCostOfBenefits");

                    b.Property<decimal>("CompensationPerPaycheck");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(60);

                    b.HasKey("ID");

                    b.ToTable("Employees");
                });

            modelBuilder.Entity("VRRailRoadEditor.Models.EmployeeDependent", b =>
                {
                    b.Property<int>("EmployeeId");

                    b.Property<int>("DependentId");

                    b.HasKey("EmployeeId", "DependentId");

                    b.HasIndex("DependentId");

                    b.ToTable("EmployeeDependents");
                });

            modelBuilder.Entity("VRRailRoadEditor.Models.ILayout", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("Height");

                    b.Property<int>("Length");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(60);

                    b.Property<int>("Width");

                    b.HasKey("ID");

                    b.ToTable("Layouts");
                });

            modelBuilder.Entity("VRRailRoadEditor.Models.IMaterial", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(60);

                    b.HasKey("ID");

                    b.ToTable("IMaterial");
                });

            modelBuilder.Entity("VRRailRoadEditor.Models.IRail", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(60);

                    b.HasKey("ID");

                    b.ToTable("IRail");
                });

            modelBuilder.Entity("VRRailRoadEditor.Models.IScenery", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd();

                    b.Property<int?>("ITileID");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(60);

                    b.Property<int?>("RailID");

                    b.Property<int>("X");

                    b.Property<int>("Y");

                    b.HasKey("ID");

                    b.HasIndex("ITileID");

                    b.HasIndex("RailID");

                    b.ToTable("IScenery");
                });

            modelBuilder.Entity("VRRailRoadEditor.Models.ITile", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Discriminator")
                        .IsRequired();

                    b.Property<int?>("PrimaryMaterialID");

                    b.Property<int?>("SecondaryMaterialID");

                    b.Property<int>("X");

                    b.Property<int>("Y");

                    b.Property<int>("Z");

                    b.HasKey("ID");

                    b.HasIndex("PrimaryMaterialID");

                    b.HasIndex("SecondaryMaterialID");

                    b.ToTable("Tiles");

                    b.HasDiscriminator<string>("Discriminator").HasValue("ITile");
                });

            modelBuilder.Entity("VRRailRoadEditor.Models.Tile", b =>
                {
                    b.HasBaseType("VRRailRoadEditor.Models.ITile");

                    b.Property<int?>("IMaterialID");

                    b.Property<int?>("LayoutID");

                    b.HasIndex("IMaterialID");

                    b.HasIndex("LayoutID");

                    b.ToTable("Tile");

                    b.HasDiscriminator().HasValue("Tile");
                });

            modelBuilder.Entity("VRRailRoadEditor.Models.EmployeeDependent", b =>
                {
                    b.HasOne("VRRailRoadEditor.Models.Dependent", "Dependent")
                        .WithMany("EmployeeDependents")
                        .HasForeignKey("DependentId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("VRRailRoadEditor.Models.Employee", "Employee")
                        .WithMany("EmployeeDependents")
                        .HasForeignKey("EmployeeId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("VRRailRoadEditor.Models.IScenery", b =>
                {
                    b.HasOne("VRRailRoadEditor.Models.ITile")
                        .WithMany("Scenery")
                        .HasForeignKey("ITileID");

                    b.HasOne("VRRailRoadEditor.Models.IRail", "Rail")
                        .WithMany()
                        .HasForeignKey("RailID");
                });

            modelBuilder.Entity("VRRailRoadEditor.Models.ITile", b =>
                {
                    b.HasOne("VRRailRoadEditor.Models.IMaterial", "PrimaryMaterial")
                        .WithMany()
                        .HasForeignKey("PrimaryMaterialID");

                    b.HasOne("VRRailRoadEditor.Models.IMaterial", "SecondaryMaterial")
                        .WithMany()
                        .HasForeignKey("SecondaryMaterialID");
                });

            modelBuilder.Entity("VRRailRoadEditor.Models.Tile", b =>
                {
                    b.HasOne("VRRailRoadEditor.Models.IMaterial")
                        .WithMany("Tiles")
                        .HasForeignKey("IMaterialID");

                    b.HasOne("VRRailRoadEditor.Models.ILayout", "Layout")
                        .WithMany("Tiles")
                        .HasForeignKey("LayoutID");
                });
#pragma warning restore 612, 618
        }
    }
}
