// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage;
using Microsoft.EntityFrameworkCore.Storage.Internal;
using Microsoft.EntityFrameworkCore.ValueGeneration;
using System;
using VRRailRoadEditor.Data;

namespace VRRailRoadEditor.Migrations
{
    [DbContext(typeof(VRRailRoadEditorContext))]
    [Migration("20171220214953_layouts")]
    partial class layouts
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.0.1-rtm-125")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("VRRailRoadEditor.Models.Dependent", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd();

                    b.Property<decimal>("BaseAnnualCostOfBenefits");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(60);

                    b.HasKey("ID");

                    b.ToTable("Dependents");
                });

            modelBuilder.Entity("VRRailRoadEditor.Models.Discount", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd();

                    b.Property<bool>("Active");

                    b.Property<int>("Amount");

                    b.Property<string>("Name")
                        .IsRequired();

                    b.Property<string>("OptionalOperand");

                    b.HasKey("ID");

                    b.ToTable("Discounts");
                });

            modelBuilder.Entity("VRRailRoadEditor.Models.Employee", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd();

                    b.Property<decimal>("BaseAnnualCostOfBenefits");

                    b.Property<decimal>("CompensationPerPaycheck");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(60);

                    b.HasKey("ID");

                    b.ToTable("Employees");
                });

            modelBuilder.Entity("VRRailRoadEditor.Models.EmployeeDependent", b =>
                {
                    b.Property<int>("EmployeeId");

                    b.Property<int>("DependentId");

                    b.HasKey("EmployeeId", "DependentId");

                    b.HasIndex("DependentId");

                    b.ToTable("EmployeeDependents");
                });

            modelBuilder.Entity("VRRailRoadEditor.Models.ILayout", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Discriminator")
                        .IsRequired();

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(60);

                    b.HasKey("ID");

                    b.ToTable("Layouts");

                    b.HasDiscriminator<string>("Discriminator").HasValue("ILayout");
                });

            modelBuilder.Entity("VRRailRoadEditor.Models.ITile", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Discriminator")
                        .IsRequired();

                    b.HasKey("ID");

                    b.ToTable("Tiles");

                    b.HasDiscriminator<string>("Discriminator").HasValue("ITile");
                });

            modelBuilder.Entity("VRRailRoadEditor.Models.EmployeeDependent", b =>
                {
                    b.HasOne("VRRailRoadEditor.Models.Dependent", "Dependent")
                        .WithMany("EmployeeDependents")
                        .HasForeignKey("DependentId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("VRRailRoadEditor.Models.Employee", "Employee")
                        .WithMany("EmployeeDependents")
                        .HasForeignKey("EmployeeId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
